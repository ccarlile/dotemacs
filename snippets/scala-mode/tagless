# Author: Chris Carlile
# name: case class T(arg: A)
# name: trait Algebra[F[_]]
# key: tagless
# --
trait ${1:`(file-name-sans-extension (file-name-nondirectory buffer-file-name))`}[F[_]]{
  def ${3:functionName}(${4:arg: Type}): F[${5:Return}]
}

object $1 {
  def impl[F[_]](implicit F: ${6:Constraint}[F]) = new $1{
    def $3($4): F[$5] = ${7:???}
  }
}